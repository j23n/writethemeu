# Generated by Django 5.2.6 on 2025-10-04 05:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('letters', '0002_alter_constituency_level'),
    ]

    operations = [
        migrations.CreateModel(
            name='TopicArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Policy area name (e.g., 'Defense', 'Education', 'Local Transportation')", max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this policy area and what it covers')),
                ('primary_level', models.CharField(choices=[('EU', 'European Union'), ('FEDERAL', 'Federal (Bund)'), ('STATE', 'State (Land)'), ('LOCAL', 'Local (Kommune)'), ('MIXED', 'Mixed Competency')], help_text='Primary governmental level responsible for this topic', max_length=20)),
                ('competency_type', models.CharField(choices=[('EXCLUSIVE', 'Exclusive Federal'), ('CONCURRENT', 'Concurrent Federal/State'), ('STATE', 'State (LÃ¤nder)'), ('LOCAL', 'Local (Municipal)')], help_text='Type of competency based on Grundgesetz', max_length=20)),
                ('keywords', models.TextField(help_text="Comma-separated keywords for matching user queries (e.g., 'train, railway, Deutsche Bahn, intercity')")),
                ('legal_basis', models.CharField(blank=True, help_text="Constitutional basis (e.g., 'Art. 73 GG', 'Art. 74(22) GG', 'Kulturhoheit')", max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_topic', models.ForeignKey(blank=True, help_text='Parent topic for hierarchical organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subtopics', to='letters.topicarea')),
            ],
            options={
                'verbose_name': 'Topic Area',
                'verbose_name_plural': 'Topic Areas',
                'ordering': ['primary_level', 'name'],
                'indexes': [models.Index(fields=['primary_level'], name='letters_top_primary_0ce7e3_idx'), models.Index(fields=['competency_type'], name='letters_top_compete_a6ce7f_idx')],
            },
        ),
    ]
