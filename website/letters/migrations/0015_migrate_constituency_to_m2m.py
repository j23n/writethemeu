# Generated by Django 5.2.6 on 2025-10-16 06:06

from django.db import migrations


def migrate_fk_to_m2m(apps, schema_editor):
    """Migrate data from ForeignKey constituency fields to M2M constituencies."""
    IdentityVerification = apps.get_model('letters', 'IdentityVerification')

    for verification in IdentityVerification.objects.all():
        constituencies_to_add = []

        # Collect all unique constituencies from the ForeignKey fields
        if verification.constituency_id:
            constituencies_to_add.append(verification.constituency_id)
        if verification.federal_constituency_id:
            if verification.federal_constituency_id not in constituencies_to_add:
                constituencies_to_add.append(verification.federal_constituency_id)
        if verification.state_constituency_id:
            if verification.state_constituency_id not in constituencies_to_add:
                constituencies_to_add.append(verification.state_constituency_id)

        # Add them to the M2M relationship
        if constituencies_to_add:
            verification.constituencies.add(*constituencies_to_add)


def reverse_migration(apps, schema_editor):
    """Reverse migration - move first constituency back to ForeignKey fields."""
    IdentityVerification = apps.get_model('letters', 'IdentityVerification')

    for verification in IdentityVerification.objects.all():
        constituencies = list(verification.constituencies.all())

        if constituencies:
            # Set the first one as the main constituency
            verification.constituency = constituencies[0]

            # Try to find federal and state constituencies
            for constituency in constituencies:
                if constituency.scope == 'FEDERAL_DISTRICT' and not verification.federal_constituency:
                    verification.federal_constituency = constituency
                elif constituency.scope in ('STATE_LIST', 'STATE_DISTRICT', 'FEDERAL_STATE_LIST'):
                    if not verification.state_constituency:
                        verification.state_constituency = constituency

            verification.save()


class Migration(migrations.Migration):

    dependencies = [
        ('letters', '0014_add_wahlkreis_fields'),
    ]

    operations = [
        migrations.RunPython(migrate_fk_to_m2m, reverse_migration),
    ]
